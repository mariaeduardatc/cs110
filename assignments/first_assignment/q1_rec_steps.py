
def unfilter_strob (n): 
    '''
    Return all the strobogrammatic numbers that are of length n through recursive
    approach unsorted and unfiltered
    ------------
    Parameters:
    n: int
        The targeted length of the digit 
    ------------
    Returns: list
        All unfiltered strobogrammatic numbers that are of the targeted length but some have 0 at its beginning and ending
    '''
    
    global step 
    step = 0

    # base cases
    if n == 0:
        step += 1
        return ['']
        
    if n == 1:
        step += 1
        return ['0', '1', '8']
        

    else:
        # recursion
        # if n > 1 we will append numbers to its beginning and end and store those new number in numbers_result
        recall = unfilter_strob(n-2)
        numbers_result = []

        # for each number generated by the recursion we need to add to its beginning new numbers until we have number of length n
        for middle in recall:
            
            # I realized for n >= 4 they were not printing numbers with zeros on the middle. For even number they don't
            # print any and for odd numbers they only print the ones that come with one zero on the middle (coming from the recall of n = 1)
            # so i added the appending of zeroes
            numbers_result.append("0" + middle + "0")
            step += 1
            numbers_result.append("1" + middle + "1")
            step += 1
            numbers_result.append("6" + middle + "9")
            step += 1
            numbers_result.append("8" + middle + "8")
            step += 1
            numbers_result.append("9" + middle + "6")
            step += 1
    return numbers_result


def strobogrammatic_recursive(n):
    '''
    Return all the strobogrammatic numbers that are of length n through recursive
    approach sorted and filtered
    ------------
    Parameters:
    n: int
        The targeted length of the digit 
    ------------
    Returns: list
        All strobogrammatic numbers that are of the targeted length
    '''
    
    # return of a list with strob. numbers unfilterd and unsorted
    step = 0
    unfiltered = unfilter_strob(n)

    if n == 0:
        step += 1
        return unfiltered
    if n == 1:
        step += 1
        return unfiltered

    # iterate trough the elements of the list
    for i in unfiltered:
        step += 1
        # analize the 1st character of the element
        if i[0] == '0':
            index = unfiltered.index(i)
            step += 1
            # remove it if it starts with 0
            unfiltered.remove(i)
            step += 1
            # put a 'holder' in its place so we don't mess up the indexing of the list
            unfiltered.insert(index, "holder")
            step += 1
                
    # only add to the list the strob. numbers
    filtered_strob = [i for i in unfiltered if i!= 'holder']
    step += 1
    # sort the list
    filtered_strob.sort(key = int)
    step += 1



    return filtered_strob, step



print(strobogrammatic_recursive(5))